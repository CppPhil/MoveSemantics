{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff31507\deff0\stshfdbch31506\stshfloch31506\stshfhich31506\stshfbi31507\deflang1031\deflangfe1031\themelang1031\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\fbidi \froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f10\fbidi \fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f10\fbidi \fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}
{\f39\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\f40\fbidi \fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Consolas;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhimajor\f31502\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0302020204030204}Calibri Light;}
{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f349\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f350\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f352\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f353\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f354\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f355\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f356\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f357\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f369\fbidi \fmodern\fcharset238\fprq1 Courier New CE;}{\f370\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f372\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}{\f373\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f374\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f375\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f376\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}{\f377\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f739\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\f740\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}
{\f742\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\f743\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\f746\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\f747\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}
{\f749\fbidi \fmodern\fcharset238\fprq1 Consolas CE;}{\f750\fbidi \fmodern\fcharset204\fprq1 Consolas Cyr;}{\f752\fbidi \fmodern\fcharset161\fprq1 Consolas Greek;}{\f753\fbidi \fmodern\fcharset162\fprq1 Consolas Tur;}
{\f756\fbidi \fmodern\fcharset186\fprq1 Consolas Baltic;}{\f757\fbidi \fmodern\fcharset163\fprq1 Consolas (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhimajor\f31528\fbidi \fswiss\fcharset238\fprq2 Calibri Light CE;}{\fhimajor\f31529\fbidi \fswiss\fcharset204\fprq2 Calibri Light Cyr;}{\fhimajor\f31531\fbidi \fswiss\fcharset161\fprq2 Calibri Light Greek;}
{\fhimajor\f31532\fbidi \fswiss\fcharset162\fprq2 Calibri Light Tur;}{\fhimajor\f31535\fbidi \fswiss\fcharset186\fprq2 Calibri Light Baltic;}{\fhimajor\f31536\fbidi \fswiss\fcharset163\fprq2 Calibri Light (Vietnamese);}
{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\*\defchp 
\f31506\fs22\lang1031\langfe1033\langfenp1033 }{\*\defpap \ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive 
\ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 \snext11 \ssemihidden \sunhideused 
Normal Table;}{\s15\ql \li720\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\contextualspace \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 \sbasedon0 \snext15 \sqformat \spriority34 \styrsid16455197 List Paragraph;}{\*\ts16\tsrowd\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh
\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 \sbasedon11 \snext16 \spriority39 \styrsid10817378 
Table Grid;}}{\*\listtable{\list\listtemplateid-1527076902\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67567617\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0\hres0\chhres0 \fi-360\li360\lin360 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567619\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 
\fi-360\li1080\lin1080 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567621\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 
\fi-360\li1800\lin1800 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567617\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 
\fi-360\li2520\lin2520 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567619\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li3240\lin3240 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567621\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li3960\lin3960 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567617\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li4680\lin4680 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567619\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li5400\lin5400 }{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567621\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li6120\lin6120 }{\listname ;}\listid426195407}{\list\listtemplateid-1410592832
\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67567617\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li2160\lin2160 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67567619\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67567621\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567617\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace360\levelindent0{\leveltext\leveltemplateid67567619\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0
{\leveltext\leveltemplateid67567621\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext
\leveltemplateid67567617\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li6480\lin6480 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext
\leveltemplateid67567619\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li7200\lin7200 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67567621
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li7920\lin7920 }{\listname ;}\listid600994628}{\list\listtemplateid-270076336\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67567631\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-360\li720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67567641\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67567643\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67567631\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67567641\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67567643\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67567631\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67567641\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67567643\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li6480\lin6480 }{\listname ;}\listid1507790567}{\list\listtemplateid1719798750\listhybrid{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67567631\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-360\li720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0
\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567641\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2
\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567643\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567631\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0
\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567641\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2
\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567643\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567631\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0
\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567641\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2
\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567643\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li6480\lin6480 }{\listname ;}\listid1729299512}
{\list\listtemplateid-2026998626\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67567631\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\fbias0\hres0\chhres0 \fi-360\li720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567641\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567643\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-180\li2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567631\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567641\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567643\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-180\li4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567631\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567641\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67567643\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-180\li6480\lin6480 }{\listname ;}\listid2119981901}}{\*\listoverridetable{\listoverride\listid1507790567\listoverridecount0\ls1}{\listoverride\listid2119981901\listoverridecount0\ls2}{\listoverride\listid600994628\listoverridecount0\ls3
}{\listoverride\listid426195407\listoverridecount0\ls4}{\listoverride\listid1729299512\listoverridecount0\ls5}}{\*\pgptbl {\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0
\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}{\pgp\ipgp0
\itap0\li0\ri0\sb0\sa0}}{\*\rsidtbl \rsid216873\rsid399453\rsid721917\rsid860821\rsid870919\rsid1114164\rsid1257668\rsid1337488\rsid1527766\rsid1771759\rsid1800239\rsid1861642\rsid1916704\rsid1925379\rsid2108608\rsid2193177\rsid2434331\rsid2514176
\rsid2645872\rsid2697290\rsid2769693\rsid2781408\rsid2836743\rsid2908824\rsid3105334\rsid3241716\rsid3306353\rsid3544172\rsid3682998\rsid3690180\rsid3694408\rsid3695048\rsid3933499\rsid3940062\rsid4024298\rsid4217575\rsid4325696\rsid4593293\rsid4937686
\rsid5182649\rsid5188787\rsid5204498\rsid5648230\rsid5650982\rsid5662447\rsid5663698\rsid5784356\rsid5974912\rsid6031737\rsid6057762\rsid6184858\rsid6246282\rsid6434611\rsid6499715\rsid6506410\rsid6575023\rsid6575740\rsid6627848\rsid6708096\rsid6778735
\rsid6956197\rsid7020615\rsid7149172\rsid7275960\rsid7485980\rsid7610864\rsid7618659\rsid7692854\rsid8064108\rsid8064593\rsid8130837\rsid8135402\rsid8326374\rsid8403215\rsid8485794\rsid8546750\rsid8614692\rsid8727727\rsid8784928\rsid9006410\rsid9055642
\rsid9206500\rsid9240766\rsid9378696\rsid9508274\rsid9526157\rsid9640187\rsid9651915\rsid9923761\rsid10252061\rsid10372804\rsid10517041\rsid10554427\rsid10573591\rsid10817378\rsid10821893\rsid10842564\rsid11412290\rsid11535359\rsid11745752\rsid11816802
\rsid12014374\rsid12075623\rsid12270613\rsid12277688\rsid12473116\rsid12520924\rsid12535877\rsid12588046\rsid12721632\rsid12741203\rsid12801911\rsid12876092\rsid12923850\rsid13003039\rsid13050013\rsid13051441\rsid13062248\rsid13183714\rsid13190678
\rsid13309829\rsid13389449\rsid13642234\rsid13652492\rsid13700690\rsid13967697\rsid14091224\rsid14104796\rsid14382815\rsid14569429\rsid14578777\rsid14823640\rsid15017235\rsid15361196\rsid15486304\rsid15543744\rsid15795703\rsid15807424\rsid16000265
\rsid16069754\rsid16148379\rsid16196768\rsid16455197\rsid16458881\rsid16537383\rsid16587683\rsid16606168\rsid16718877\rsid16739915}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0
\mnaryLim1}{\info{\author Jefe}{\operator Jefe}{\creatim\yr2016\mo9\dy12\hr19\min57}{\revtim\yr2016\mo9\dy12\hr19\min57}{\printim\yr2016\mo9\dy12\hr19\min52}{\version2}{\edmins0}{\nofpages21}{\nofwords4214}{\nofchars26554}{\nofcharsws30707}{\vern15}}
{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw11906\paperh16838\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\deftab708\widowctrl\ftnbj\aenddoc\hyphhotz425\trackmoves0\trackformatting1\donotembedsysfont1\relyonvml0\donotembedlingdata0\grfdocevents0\validatexml1\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0
\showxmlerrors1\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1440\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale120\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct
\asianbrkrule\rsidroot8135402\newtblstyruls\nogrowautofit\usenormstyforlist\noindnmbrts\felnbrelev\nocxsptable\indrlsweleven\noafcnsttbl\afelev\utinl\hwelev\spltpgpar\notcvasp\notbrkcnstfrctbl\notvatxbx\krnprsnet\cachedcolbal \nouicompat \fet0
{\*\wgrffmtfilter 2450}\nofeaturethrottle1\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\headery708\footery708\colsx708\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \ul\insrsid9508274\charrsid15017235 Inhaltsverzeichnis
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid9508274\charrsid1925379 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid6499715\charrsid1925379 Abstract}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid12473116\charrsid1925379 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid6499715\charrsid1925379 
\par Einleitung
\par 
\par Haupteil
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid9055642\charrsid1925379 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}\pard\plain \ltrpar\s15\ql \fi-360\li360\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin360\itap0\pararsid4217575\contextualspace \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid9055642\charrsid1925379 Was ist ein Move?}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid9055642 
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid6708096 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid6708096 Gef\'e4hrliche und harmlose Moves
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid721917 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid721917 Value categories
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid12721632 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid12721632 Rvalue-Referenzen
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid5650982 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid5650982 Implizite Konvertierungen
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid13190678 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13190678 Move-Konstruktoren}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid13190678\charrsid1925379 
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid1257668 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid1257668 Move-Zuweisungsoperatoren}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid6499715 
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid2645872 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid2645872 Von Lvalues moven
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid10842564 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid10842564 Xvalues
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid16587683 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid16587683 Aus Funktionen hinausmoven
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid16196768 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid16196768 In Datenmember hineinmoven
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid9378696 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid9378696 Spezielle Mitgliedsfunktionen
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid8064108 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8064108 Forwarding references
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid13700690 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13700690 Implementation von std::move
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid14823640 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid14823640 Perfect forwarding
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid6031737 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid6031737 Move-Sicherheit
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f3\fs22\insrsid4325696 \loch\af3\dbch\af31506\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 Interaktion mit Standardbibliothekscontainern
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid6499715\charrsid1925379 
\par Quellenangaben
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid2836743\charrsid1925379 
\par 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid2836743 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid7610864 
\par 
\par 
\par 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid7610864\charrsid1925379 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid2836743\charrsid1925379 
\par 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \ul\insrsid216873\charrsid15017235 Abstra}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \ul\insrsid15017235 c}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \ul\insrsid216873\charrsid15017235 t }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\ul\insrsid2836743\charrsid15017235 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid216873 Folgendes Dokument erl\'e4utert die Move-Semantik in der C++-Programmiersprache, welche seit dem C++11-Programmiersprachenstandard Teil der C++-Programmiersprache ist.
\par Dabei kommen Text, Codebeispiele, sowie Diagramme und Tabellen zur Erl\'e4uterung zum Einsatz.
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid15017235 Begonnen wird mit einer Einleitung in die Thematik der Move-Semantik.}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid216873 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid15017235 An die Einleitung schlie\'dft sich der Hauptteil an, welcher mit dem Kapitel \'84Was ist ein Move?\'93 beginnt.
\par Darauf folgen die Kapitel 
\par \'84Gef\'e4hrliche und harmlose Moves\'93,}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid2836743 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid15017235 \'84Value categories\'93,
\par \'84Rvalue-Referenzen\'93,
\par \'84Implizite Konvertierungen\'93,
\par \'84Move-Konstruktoren\'93,
\par \'84Move-Zuweisungsoperatoren\'93,
\par \'84Von Lvalues moven\'93,
\par \'84Xvalues\'93,
\par \'84Aus Funktionen hinausmoven\'93,
\par \'84In Datenmember hineinmoven\'93,
\par \'84Spezielle Mitgliedsfunktionen\'93,
\par \'84Forwarding references\'93,
\par \'84Implementation von std::move\'93,
\par \'84Perfect forwarding\'93,
\par \'84Move-Sicherheit\'93
\par und
\par \'84Interaktion mit Standardbibliothekscontainern\'93
\par Das Dokument beendet sich mit Quellenangaben.}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid15017235\charrsid1925379 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid9526157\charrsid1925379 
\par 
\par 
\par 
\par 
\par 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \ul\insrsid9526157\charrsid6057762 Einleitung
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid9526157\charrsid1925379 Die Move-Semantik erlaubt es einem Objekt, unter bestimmten Bedingungen Besitz \'fcber externe Ressourcen eines anderen Objekts zu \'fcbernehmen. }{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid16455197\charrsid1925379 Dies ist auf zweierlei Weise von Signifikanz:}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid9526157\charrsid1925379 
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f31506\fs22\insrsid16455197\charrsid1925379 \hich\af31506\dbch\af31506\loch\f31506 1.\tab}}\pard\plain \ltrpar\s15\ql \fi-360\li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid16455197\charrsid1925379 G\'fcnstigere Move-Operationen statt teurere Kopieroperationen zu verwenden.
\par }\pard \ltrpar\s15\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13967697\charrsid1925379 Beispiel:
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid6246282\charrsid1925379 Es sei folgende Klasse gegeben:}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13967697\charrsid1925379 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid6246282\charrsid1925379 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid6246282\charrsid13051441 #include <cstring>
\par 
\par class }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid6246282\charrsid13051441  \{
\par public:
\par     explicit }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid6246282\charrsid13051441 (const char* string)
\par         : string_(new char[std::strlen(string) + 1]) \{
\par         std::strcpy(string_, string);
\par     \}
\par 
\par     }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid6246282\charrsid13051441 (const }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 MyClass}{\rtlch\fcs1 \af40 
\ltrch\fcs0 \f40\insrsid9651915 & other)}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid6246282\charrsid13051441 
\par         : string_(new char[std::strlen(other.string_) + 1]) \{
\par         std::strcpy(string_, other.string_);
\par     \}
\par 
\par     }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid6246282\charrsid13051441 & operator=(const }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 MyClass}{
\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9651915 & other) \{}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid6246282\charrsid13051441 
\par         char* tmp = new char[std::strlen(other.string_) + 1];
\par         std::strcpy(tmp, other.string_);
\par         delete[] string_;
\par         string_ = tmp;
\par         return *this;
\par     \}
\par 
\par     ~}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9651915 () \{}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid6246282\charrsid13051441 
\par         delete[] string_;
\par     \}
\par 
\par private:
\par     char* string_;
\par \};
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid6246282\charrsid1925379 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid10821893\charrsid1925379 Folgende Funktion sei deklariert und definiert:}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid6246282\charrsid1925379 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10821893\charrsid13051441 void f(}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10821893\charrsid13051441  v);
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid10821893\charrsid1925379 
\par Die main-Funktion sehe wie folgt aus:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10821893\charrsid13051441 int main() \{
\par     f(}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10821893\charrsid13051441 (\'93Hallo\'94));
\par     return 0;
\par \}
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid10821893\charrsid1925379 
\par Es wird ein tempor\'e4res Objekt vom Typ }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid10372804\charrsid1925379 MyClass}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid10821893\charrsid1925379  mit dem Stringliteral \'93Hallo\'93
 konstruiert, entsprechend des Konstruktors.
\par Dieses Objekt wird nun in den Parameter v der Funktion f mit dem Kopierkonstruktor kopiert.
\par 
\par Da das tempor\'e4re Objekt nicht l\'e4nger gebraucht wird, wird die Zeichenfolge \'93Hallo\'93 einmal unn\'f6tigerweise kopiert.
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid10372804\charrsid1925379 
\par In C++11 kann man mit einem Move-Konstruktor und einem Move-Zuweisungsoperator durch Move-Semantik diese unn\'f6tige Kopie entfernen.
\par Die Klasse w\'e4re dann wie folgt definiert:
\par 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 #include <cstring>
\par 
\par class MyClass final \{
\par public:
\par     explicit MyClass(const char* string)
\par         : string_\{ new char[std::strlen(string) + 1] \} \{
\par         std::strcpy(string_, string);
\par     \}
\par 
\par     MyClass(const MyClass& other)
\par         : string_\{ new char[std::strlen(other.string_) + 1] \} \{
\par         std::strcpy(string_, other.string_);
\par     \}
\par 
\par     MyClass(MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9651915 && other) noexcept}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 
\par         : string_\{ other.string_ \} \{
\par         other.string_ = nullptr;
\par     \}
\par 
\par     MyClass& operator=(const MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9651915 & other) \{}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid9651915 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441         auto tmp = new char[std::strlen(other.string_) + 1];
\par         std::strcpy(tmp, other.string_);
\par         delete[] string_;
\par         string_ = tmp;
\par         return *this;
\par     \}
\par 
\par     MyClass& operator=(MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9651915 && other) noexcept \{}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 
\par         auto tmp = other.string_;
\par         other.string_ = nullptr;
\par         delete[] string_;
\par         string_ = tmp;
\par         return *this;
\par     \}
\par 
\par     ~MyClass}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9651915 () \{}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10372804\charrsid13051441 
\par         delete[] string_;
\par     \}
\par 
\par private:
\par     char* string_;
\par \};
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid7692854\charrsid1925379 
\par Nun wird statt des Kopierkonstruktors der Move-Konstruktor aufgerufen, was dazu f\'fchrt, dass die Zeichenkette nicht kopiert wird, sondern das neue Objekt v in f einfach Besitz \'fcber die Zeichenkette des tempor\'e4ren Objekts \'fcbernimmt.
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13967697\charrsid1925379 
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af31507\afs22 \ltrch\fcs0 \f31506\fs22\insrsid16455197\charrsid1925379 \hich\af31506\dbch\af31506\loch\f31506 2.\tab}}\pard \ltrpar\s15\ql \fi-360\li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid16455197\charrsid1925379 Das Implementieren}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid9006410\charrsid1925379  vom Move-Only-Typen.}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid16455197\charrsid1925379 
\par }\pard \ltrpar\s15\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid15807424\charrsid1925379 
Es gibt Typen, die logisch nicht kopierbar sind.
\par Dazu z\'e4hlen zum Beispiel Netzwerksockets, Dateihandles, Locks, etc.
\par Auch der neue smart pointer std::unique_ptr z\'e4hlt zu den Move-Only-Typen, da dieser das Konzept eines einzelnen Besitzers \'fcber eine Ressource implementiert.
\par 
\par 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \ul\insrsid15807424\charrsid11816802 Hauptteil
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13003039 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 
{\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid9055642\charrsid5663698 Was ist ein Move?
\par }\pard\plain \ltrpar\s15\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid1925379\charrsid1925379 Die C++98 Standardbibliothek bietet einen smart pointer, welcher die Semantik eines einzelnen Besitzers \'fc
ber eine Ressource implementiert, welcher std::auto_ptr hei\'dft.
\par Der Sinn und Zweck von std::auto_ptr war es zu garantieren, dass ein dynamisch allokiertes Objekt immer freigegeben wird, unabh\'e4ngig davon ob Ausnahmen geworfen werden.
\par Beispiel:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1925379\charrsid8727727 \{
\par     std::auto_ptr<Form> a(new Dreieck);
\par     // \'85
\par     // beliebiger Code, k\'f6nnte Ausnahmen werfen
\par     // \'85 
\par \}   // }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1925379\charrsid8727727 {\field{\*\fldinst SYMBOL 223 \\f "Wingdings" \\s 11}{\fldrslt\f10\fs22}}}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1925379\charrsid8727727  wenn a seinen G\'fc
ltigkeitsbereich verl\'e4sst wird das Dreieck }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8727727 
\par     // }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1925379\charrsid8727727 automatisch zerst\'f6rt.
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8130837 
\par Was an dem auto_ptr besonders ist, ist wie er kopiert:}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid16537383 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16537383 std::}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13051441\charrsid16537383 auto_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16537383 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid13051441\charrsid16537383 > a(new }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16537383 Dreieck}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13051441\charrsid16537383 );
\par 
\par       +---------------+
\par       |}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12741203  }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13642234  }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12741203 Dreieckdaten}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12741203\charrsid16537383  }{
\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13051441\charrsid16537383 |
\par       +---------------+
\par         ^
\par         |
\par         |
\par         |
\par   +-----|---+
\par   |   +-|-+ |
\par a | p | | | |
\par   |   +---+ |
\par   +---------+
\par 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid5663698 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1114164 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid5663698 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3933499 std::}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13051441\charrsid16537383 auto_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3933499 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid13051441\charrsid16537383 > b(a);
\par 
\par       +---------------+
\par       |}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3933499  }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13051441\charrsid16537383  }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3933499 Dreieckdaten}{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid13051441\charrsid16537383  |
\par       +---------------+
\par         ^
\par         |
\par         +----------------------+
\par                                |
\par   +---------+            +-----|---+
\par   |   +---+ |            |   +-|-+ |
\par a | p |   | |          b | p | | | |
\par   |   +---+ |            |   +---+ |
\par   +---------+            +---------+}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8130837 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8064593 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16069754 Achten Sie darauf, wie die Initialisierung von b mit a nicht das Dreieck kopiert.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid8064593 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16069754 Stattdessen wird der Besitz \'fcber das Dreieck von a nach b transferiert.
\par 
\par Ein Objekt zu Moven bedeutet den Besitz der Ressourcen, welche es verwaltet an ein anderes Objekt zu \'fcbergeben.
\par 
\par Der Kopierkonstruktor von auto_ptr k\'f6nnte in etwa so aussehen:
\par 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16069754 auto_ptr(auto_ptr& quelle) // kein const, da quelle modifiziert wird
\par \{
\par     p = quelle.p;
\par     quelle.p = 0; // die quelle besitzt das Objekt nicht mehr.
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid870919 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3940062 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid4593293\charrsid8614692 Gef\'e4hrliche und harmlose Moves}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid5974912\charrsid8614692 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid3940062 D}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid5974912 as Gef\'e4hrliche an dem auto_ptr ist, dass das was syntaktisch wie ein Kopieren aussieht in 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid5974912 Wirklichkeit ein Move ist. Ein Versuch eine Funktion \'fcber den \'fc
berladenen }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid5974912\charrsid5974912 member of pointer}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid5974912 -Operator von }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid7618659 
std::auto_ptr aufzurufen, nachdem von diesem der Besitz \'fcber das zu verwaltende Objekt durch den Kopierkonstruktor oder Kopierzuweisungsoperator hinfort transferiert wurde resultiert in undefiniertem Verhalten.}{\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid15361196  Somit ist der Umgang mit auto_ptr gef\'e4hrlich, da man ihn leicht falsch benutzen kann.}{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid5974912 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid15361196 Beispiel:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid15361196 auto_ptr<Form> a(new Dreieck); // Dreieck erstellen
\par auto_ptr<Form> b(a);\tab         // a nach b moven
\par double flaeche = a->flaeche();  // undefiniertes Verhalten
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid15361196 Bei einer Fabrikfunktion tritt diese Gefahr nicht auf.
\par Beispiel:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid15361196\charrsid15361196 auto_ptr<Form> erstelle_dreieck()
\par \{
\par     return auto_ptr<Form>(new Dreieck);
\par \}
\par auto_pt}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid15361196 r<Form> c(erstelle_dreieck()); // move das Tempor\'e4re}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid15361196\charrsid15361196  in c
\par double flaeche = erstelle_dreieck()->flaeche(); // sicher
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2769693 Achten Sie darauf, wie beide Beispiele demselben syntaktischen Muster folgen:}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid15361196 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid2769693 auto_ptr<Form> variable(ausdruck);
\par double flaeche = ausdruck->flaeche();
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2769693 Trotzdem f\'fchrt ein Beispiel zu undefiniertem Verhalten, w\'e4hrend das andere dieses nicht tut.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10554427  a und erstelle_dreieck() sind ausdr\'fc
cke vom selben Typ haben aber eine andere value category.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2769693 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid15543744 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6956197 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid15543744\charrsid6506410 Value categories
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2434331 Es gibt einen signifikanten Unterschied zwischen den Ausdr\'fc
cken a, welcher eine auto_ptr Variable bezeichnet und dem Ausdruck erstelle_dreieck(), welcher einen Funktionsaufruf, welcher einen auto_ptr per Wert zur\'fcckgibt, bezeichnet. erstelle_dreieck() erstellt bei jedem neuen Aufruf immer ein neues tempor\'e4
res auto_ptr Objekt.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3241716  a ist eine lvalue, w\'e4hrend erstelle_dreieck() ein Beispiel f\'fcr eine rvalue ist.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid15543744 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12014374 Von lvalues wie a zu moven ist gef\'e4hrlich, denn man k\'f6nnte sp\'e4ter versuchen beispielsweise eine Mitgliedsfunktion \'fcber a aufzurufen, welches in undefiniertem Verhalten resultieren w\'fcrde.}{
\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3241716 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10517041 Von rvalues wie erstelle_dreieck() zu moven ist sicher}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2108608 , denn man kann dieses tempor\'e4
re Objekt nicht noch einmal referenzieren. Wenn man erneut erstelle_dreieck() schreibt, so bekommt man ein anderen tempor\'e4res Objekt. Das tempor\'e4re Objekt, von welchem moved wird verl\'e4sst seinen G\'fcltigkeitsbereich nach dem Ausdruck.}{
\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12014374 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid2108608 auto_ptr<Form> c(erstelle_dreieck());
\par \tab \tab \tab \tab \tab        ^ das Tempor\'e4re wird zerst\'f6rt
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid14091224 Die Buchstaben l und r bei lvalues und rvalues haben historische Herkunft. Das l steht dabei f\'fcr die linke Seite einer Zuweisung und das r f\'fcr die rechte Seite einer Zuweisung.}{\rtlch\fcs1 \af40 
\ltrch\fcs0 \insrsid2193177  In C++ gilt dies allerdings nicht mehr, da es lvalues gibt, die nicht auf der linken Seite einer Zuweisung auftreten k\'f6nnen, wie zum Beispiel arrays, oder benutzerdefinierte Type ohne Zuweisungsoperator.}{\rtlch\fcs1 \af40 
\ltrch\fcs0 \insrsid16458881  Au\'dferdem gibt es auch rvalues, die auf der linken Seite einer Zuweisung auftreten k\'f6nnen, dazu z\'e4hlen alle rvalues von Klassentypen mit Zuweisungsoperator.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2108608 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16458881 Eine rvalue eines Klassentyps ist ein Ausdruck, dessen Evaluation ein tempor\'e4res Objekt erzeugt. Unter normalen Umst\'e4nden kann kein anderer Ausdruck im selben G\'fcltigkeitsbereich des selbe tempor
\'e4re Objekt bezeichnen.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12721632 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6956197 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid6956197 
\par 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid12721632\charrsid6506410 Rvalue-Referenzen
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12721632 Nun ist uns klar, dass das Moven von lvalues potenziell gef\'e4
hrlich sein kann und dass das Moven von rvalues harmlos ist. Wenn man lvalue-Argumente von rvalue-Argumenten unterscheiden kann, dann kann man das Moven von lvalues unterbinden, oder es wenigstens explizit 
machen, sodass man nicht mehr aus Versehen Moven kann.
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6956197 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12721632 Die Antwort auf das Problem sind in C++11 die }{\rtlch\fcs1 \af31507 
\ltrch\fcs0 \insrsid12721632 Rvalue-Referenzen.
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid12721632 
Eine Rvalue-Referenz ist ein neuer Referenztypmodifizierer, welcher eine Referenz deklariert, die ausschlie\'dflich an rvalues gebunden werden kann.
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid14569429 Der Syntax ist X&&. Die aus C++98 und C++03 bekannte Referenz im Stil X&, wird Lvalue-Referenz genannt.
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid9206500 X&& ist keine Referenz auf eine Referenz, so etwas ist in C++ nicht m\'f6glich, da Referenzen keine Objekte sind.
\par Mit dem const-Typmodifizierer haben wir bereits vier verschiedene Referenztypen.
\par Der folgenden Tabelle ist zu entnehmen an welche Art von Ausdruck welcher Referenztyp gebunden werden kann:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500\charrsid9206500             lvalue   const lvalue   rvalue   const rvalue
\par ---------------------------------------------------------              
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500 X&          Ja\tab     Nein           Nein     Nein}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500\charrsid9206500 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500 const X&    Ja}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500\charrsid9206500       }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500   Ja}{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid9206500\charrsid9206500             }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500  Ja}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500\charrsid9206500       }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500  Ja}{\rtlch\fcs1 \af40 
\ltrch\fcs0 \f40\insrsid9206500\charrsid9206500 
\par X&&    }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500      Nein      Nein           Ja       Nein}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500\charrsid9206500 
\par const X}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500 &&   Nein      Nein           Ja}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500\charrsid9206500       }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9206500  Ja}{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid9206500\charrsid9206500 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12721632 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6778735 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid5650982\charrsid6506410 Implizite Konvertierungen
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3690180 
Eine Rvalue-Referenz X&& kann auch an alle value categories eines anderen Typs Y gebunden werden, gegeben, dass es eine implizite Konvertierung von Y zu X gibt. In dem Fall wird ein tempor\'e4
res Objekt vom Typ X erstellt, an welches die Rvalue-Referenz gebunden wird.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid5650982 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3690180 void eine_funktion(std::string&& r);
\par eine_funktion(\'93Hallo Welt\'93);
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12588046\charrsid12588046 In dem obigen Beispiel ist \'93Hallo Welt\'93 eine lvalue vom Ty const char[11]. Da es eine implizite}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12588046 
 Konvertierung von const char[11] durch const char* zu std::string gibt, wird ein tempor\'e4res Objekt vom Typ std::string kreiert und r wird an dieses gebunden.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3690180 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6778735 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid11745752 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid13190678\charrsid6506410 Move-Konstruktoren
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid1861642 Ein n}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid1916704 \'fc
tzliches Beispiel f\'fcr eine Funktion mit einem X&&-Parameter ist der Move-Konstruktor X::X(X&& quelle). Der Sinn des Move-Konstruktors ist es den Besitz von einer verwalteten Ressource von einem Quellobjekt zum momentanen Objekt zu transferieren.}{
\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13190678 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid1916704 In C++11 wurde die Klasse std::auto_ptr mit std::unique_ptr effektiv erstetzt.
\par std::unique_ptr nutzt Rvalue-Referenzen.
\par Im Folgenden soll eine vereinfachte Version von unique_ptr erstellt werden. Zuerst wird ein roher Zeiger gekapselt und die Operatoren -> und * werden \'fcberladen.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1916704\charrsid1916704 template<typename T>
\par class unique_ptr
\par \{
\par     T* ptr;
\par 
\par public:
\par     T* operator->() const
\par     \{
\par         return ptr;
\par     \}
\par 
\par     T& operator*() const
\par     \{
\par         return *ptr;
\par     \}}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1916704 
\par // Der Konstruktor \'fcbernimmt den Besitz \'fcber das Objekt und
\par // der Destruktor l\'f6scht es.
\par     e}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1916704\charrsid1916704 xplicit unique_ptr(T* p = nullptr)
\par     \{
\par         ptr = p;
\par     \}
\par 
\par     ~unique_ptr()
\par     \{
\par         delete ptr;
\par     \}}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1916704 
\par // Nun der Move-Konstruktor
\par     }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1916704\charrsid1916704 u}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1916704 nique_ptr(unique_ptr&& source)
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1916704\charrsid1916704     \{
\par         ptr = source.ptr;
\par         source.ptr = nullptr;
\par     \}}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1916704 
\par // Dieser Move-Konstruktor tut das Gleiche, wie
\par // der Kopierkonstruktor von auto_ptr,
\par // doch kann er nur mit Rvalues beliefert werden.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid14578777 unique_ptr<Form> a(new Dreieck);
\par unique_ptr<Form> b(a);                  // Fehler
\par unique_ptr<Form> c(erstelle_dreieck()); // okay
\par 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid14578777 Die zweite Zeile wird einen Kompilierfehler verursachen, da a eine lvalue ist, aber der parameter unique_ptr&& source nur an rvalues gebunden werden kann. So k\'f6nnen gef\'e4
hrliche Moven von lvalues nicht mehr implizit geschehen.
\par Die dritte Zeile kompiliert }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid5182649 fehlerfrei}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid14578777 , da erstelle_dreieck() eine rvalue ist. Der Move-Konstruktor wird den Besitz von dem tempor\'e4ren Objekt zu c tran
sferieren.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2514176 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13183714 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid2514176\charrsid5182649 Move-Zuweisungsoperatoren
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13389449 
Der Move-Zuweisungsoperator gibt die alte Ressource frei und bekommt eine neue Ressource vom Argument.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2514176 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8326374 unique_ptr& operator=(unique_ptr&& source)}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13389449 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8326374 \{
\par     auto temp = other.ptr;
\par     other.ptr = nullptr;
\par     delete ptr;
\par     ptr = temp;
\par 
\par     return *this;
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid9240766 Wie auch ein Kopierzuweisungsoperator sollte der Move-Zuweisungsoperator selbstzuweisungssicher sein. Das obige Beispiel zeigt eine selbstzuweisungssichere Implementation.
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13183714 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid2645872\charrsid5182649 Von Lvalues moven
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12801911 Manchmal m\'f6chte man von Lvalues moven. Also m\'f6
chte man, dass der Compiler ein Lvalue-Objekt behandelt, als w\'e4re es ein Rvalue-Objekt, sodass der Move-Konstruktor aufgerufen werden kann, auch wenn dies potenziell unsicher sein kann. Daf\'fcr bietet die C++11-Standardbibliothek ein Funktion
stemplate std::move im header <utility>. std::move casted eine Lvalue zu einer Rvalue, es moved aber nichts selbst. Es erm\'f6
glicht lediglich das Moven von einer Lvalue. Ist zum Beispiel kein Move-Konstruktor vorhanden, wird nicht gemoved sondern der Kopierkonstruktor aufgerufen.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2645872 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12801911 So kann man von einer Lvalue moven:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12801911 unique_ptr<Form> a(new Dreieck);
\par unique_ptr<Form> b(a);            // Fehler
\par unique_ptr<Form> c(std::move(a)); // okay
\par 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid399453 Nach der dritten Zeile besitzt a nicht mehr das Dreieck.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12801911 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10842564 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13183714 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid10842564\charrsid5182649 Xvalues
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10842564 Trotz dass 
std::move eine rvalue ist, kreiert dessen Evaluation kein tempor\'e4res Objekt. Dieses R\'e4tsel zwang das Standardk}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10842564\charrsid10842564 omitee}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10842564 
 eine dritte value category einzuf\'fchren.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3105334  Etwas, welches an eine Rvalue-Referenz gebunden werden kann, aber nicht eine Rvalue im traditionell
em Sinne ist, wird xvalue genannt (expiring value). Die traditionellen Rvalues wurden zu prvalues umbenannt (pure rvalues).}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10842564 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3105334 prvalues und xvalues sind rvalues. Xvalues und Lvalues sind beide glvalues (generalized lvalues). Der Zusammenhang sei durch folgendes Diagramm dargestellt:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3105334\charrsid3105334         }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3105334   Ausdr\'fccke}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3105334\charrsid3105334 
\par           /     \\
\par          /       \\
\par         /         \\
\par     glvalues   rvalues
\par       /  \\       /  \\
\par      /    \\     /    \\
\par     /      \\   /      \\
\par lvalues   xvalues   prvalues}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3105334 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid1527766 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid1527766 C++98 rvalues hei\'dfen prvalues in C++11. Somit kann der Leser nun nach Einf\'fchrung der prvalues jedes Auftreten von rvalue in den voherigen Kapiteln mit prvalue ersetzen.
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13183714 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid5648230\charrsid5182649 Aus Funktionen hinausmoven
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid8784928 Man kann auch aus Funktionen hinausmoven.}{\rtlch\fcs1 \af40 
\ltrch\fcs0 \insrsid1527766 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid8784928 Wenn eine Funktion etwas per Wert zur\'fcckgibt, so kann man mit dem R\'fcckgabewert eine Variable an der Aufrufsstelle initialisieren. Dabei wird der Ausdruck nach dem return Schl\'fc
sselwort als Argument an den Move-Konstruktor genutzt.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928\charrsid8784928 unique_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928\charrsid8784928 > }{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid8784928 erstelle_dreieck}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928\charrsid8784928 ()
\par \{
\par     return unique_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928\charrsid8784928 >(new }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928 Dreieck}{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid8784928\charrsid8784928 );
\par \}          \\-----------------------------/
\par                   |
\par                   | }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928 Tempor\'e4res Objekt wird in c hineingemoved}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928\charrsid8784928 
\par                   |
\par                   v
\par unique_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11535359 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928\charrsid8784928 > c(}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11535359 erstelle_dreieck}{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid8784928\charrsid8784928 ());}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid8784928 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid11412290 Automatische Objekte (lokale Variablen, welche nicht als static deklariert sind) k\'f6nnen implizit aus Funktionen hinausgemoved werden:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290\charrsid11412290 unique_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290\charrsid11412290 > }{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid11412290 erstelle_quadrat}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290\charrsid11412290 ()
\par \{
\par     unique_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290\charrsid11412290 > result(new }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290 Quadrat}{\rtlch\fcs1 \af40 \ltrch\fcs0 
\f40\insrsid11412290\charrsid11412290 );
\par     return result;   // }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290 kein std::move}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290\charrsid11412290 
\par \}}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid11412290 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2697290 Am Ende der Funktion endet der G\'fcltigkeitsbereich von result. Nach dem zur\'fc
ckkehren der Funktion existiert result nicht mehr, darum kann das Lvalue-Objekt ohne std::move implizit aus der Funktion hinausgemoved werden.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid5662447 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid7020615 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13183714 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid7020615\charrsid5182649 In Datenmember hineinmoven
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid7020615 Folgender Code kompiliert nicht:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7020615\charrsid7020615 class Foo
\par \{
\par     unique_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7020615 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7020615\charrsid7020615 > member;
\par 
\par public:
\par     Foo(unique_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7020615 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7020615\charrsid7020615 >&& parameter)
\par     : member(parameter)   // error
\par     \{\}
\par \};}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7020615 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid7020615 Das liegt daran, dass unique_ptr ein move-only type ist und parameter eine Lvalue ist.
\par Eine Referenz ist immer eine Lvalue.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12535877  Das gilt auch f\'fcr Rvalue-Referenzen. Eine Rvalue-Referenz ist lediglich eine Referenz, die nur an Rvalues gebunden werden kann.}{\rtlch\fcs1 \af40 \ltrch\fcs0 
\insrsid7020615 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12535877 Die L\'f6sung ist es explizit mit std::move zu einer Rvalue zu casten.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12535877\charrsid12535877 class Foo
\par \{
\par     unique_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12535877 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12535877\charrsid12535877 > member;
\par 
\par public:
\par     Foo(unique_ptr<}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12535877 Form}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12535877\charrsid12535877 >&& parameter)
\par     :}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12535877  member(std::move(parameter))}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12535877\charrsid12535877 
\par     \{\}
\par \};}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid12535877 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6184858 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid6184858 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid16606168\charrsid5182649 Spezielle Mitgliedsfunktionen
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16606168 
In C++98 werden implizit drei spezielle Mitgliedsfunktionen generiert, wenn sie ben\'f6tigt werden. Diese sind Kopierkonstruktor, Kopierzuweisungsoperator und Destruktor.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12535877 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16606168 X::X(const X&);            // Kopierkonstruktor
\par X& X::operator=(const X&); // Kopierzuweisungsoperator
\par X::~X();                   // Destruktor
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid2908824 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2908824 In C++11 werden zwei weitere spezielle Mitgliedsfunktionen generiert.
\par Diese sind Move-Konstruktor und Move-Zuweisungsoperator.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid2908824 X::X(X&&);            // Move-Konstruktor
\par X& X::operator=(X&&); // Move-Zuweisungsoperator
\par 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid14104796 Diese zwei neuen speziellen Mitgliedsfunktionen werden nur dann implizit generiert, wenn keine speziellen Mitgliedsfunktionen manuell deklariert wurden. D
es Weiteren werden Kopierkonstruktor und Kopierzuweisungsoperator nicht mehr generiert, wenn man seinen eigenen Move-Konstruktor oder Move-Zuweisungsoperator deklariert.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid2908824 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10817378 Folgende Tabelle stellt dar, welche speziellen Mitgliedsfunktionen der Compiler in welchen F\'e4llen generiert:
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \lang1024\langfe1024\noproof\insrsid10252061 {\shp{\*\shpinst\shpleft1165\shptop725\shpright2805\shpbottom3992\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz1\shplid1027
{\sp{\sn shapeType}{\sv 202}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lTxid}{\sv 65536}}{\sp{\sn fRotateText}{\sv 0}}{\sp{\sn fFitShapeToText}{\sv 0}}{\sp{\sn fillColor}{\sv 16777215}{\*\hsv \cmainlightone\ctint255\cshade255}}
{\sp{\sn fFilled}{\sv 1}}{\sp{\sn lineWidth}{\sv 6350}}{\sp{\sn fLine}{\sv 1}}{\sp{\sn wzName}{\sv Textfeld 1}}{\sp{\sn metroBlob}{\sv {\*\svb 
504b030414000600080000002100b6833892fe000000e1010000130000005b436f6e74656e745f54797065735d2e786d6c9491414ec3301045f748dcc1f216254ebb400825e982b44b40a81c60644f128b646c794c686f8f93b61b449158da33ffbf27bbdc1cc6414c18d83aaae42a2fa440d2ce58ea2af9bedf650f527004
323038c24a1e91e5a6bebd29f7478f2c529ab8927d8cfe5129d63d8ec0b9f34869d2ba30424cc7d0290ffa033a54eba2b857da51448a599c3b645d36d8c2e710c5f690ae4f26010796e2e9b438b32a09de0f56434ca66a22f383929d09794a2e3bdc5bcf774943aa5f09f3e43ae09c7b494f13ac41f10a213ec398349409ac
70ed1aa7f3bf3b66c99133d7b65663de04de2ea98bd3b56ee3be28e0f4dff226c5de70bab4abe583ea6f000000ffff0300504b03041400060008000000210038fd21ffd6000000940100000b0000005f72656c732f2e72656c73a490c16ac3300c86ef83bd83d17d719ac318a34e2fa3d06be91ec0d88a631a5b4632d9faf6
3383c1327adb51bfd0f7897f7ff84c8b5a91255236b0eb7a50981df9988381f7cbf1e90594549bbd5d28a3811b0a1cc6c787fd19175bdb91ccb1886a942c06e65acbabd6e2664c563a2a98db66224eb6b691832ed65d6d403df4fdb3e6df0c18374c75f206f8e40750975b69e63fec141d93d0543b4749d33445778faa3d7d
e433ae8d62396035e059be43c6b56bcf81beefddfdd31bd89639ba23db846fe4b67e1ca8653f7abde972fc020000ffff0300504b030414000600080000002100f007fd884c020000a20400000e0000006472732f65326f446f632e786d6cac54c16edb300cbd0fd83f08ba2f76b2b4dd823a4596a2c380a22dd00e3d2bb2d4
1893454d5262775fbf27c549d36ea7611759149f1ec547d2e7177d6bd856f9d090adf8785472a6aca4bab14f15fffe70f5e11367210a5b0b435655fc59057e317fffeebc733335a135995a7906121b669dabf83a46372b8a20d7aa1561444e593835f9564498fea9a8bde8c0de9a625296a74547be769ea40a01a7973b279f
677ead958cb75a071599a938de16f3eaf3ba4a6b313f17b3272fdcba91c333c43fbca2158d45d003d5a588826d7cf30755db484f81741c496a0bd2ba912ae7806cc6e59b6ceed7c2a99c0bc409ee2053f87fb4f2667be75953a3769c59d1a2440faa8f5a999a8d933a9d0b3380ee1d60b1ff427d420ee7018729e95efb367d
910e831f3a3f1fb4051993e952391d9f4e1044c23729cfa667e3cc53bc5c773ec4af8a5a963615f7285ed6546caf43444840f790142d9069eaabc6986ca486514be3d956a0d426eec95fa18c655dc54f3f9e9499f8952f511feeaf8c903f529a88798482652c0e9328bbe4d32ef6ab7e506445f53384f2b46bb4e0e45503de
6b11e29df0e82c68836989b758b4213c86861d676bf2bffe769ef02838bc9c75e8d48a879f1be11567e69b452b7c1e4fa7a9b5b3313d399bc0f0c79ed5b1c76eda2541215402afcbdb848f66bfd59eda470cd52245854b5889d8158ffbed32eee6074329d5629141686627e2b5bd773251a78a243d1ffa47e1dd50cf8856b8
a17d4f8bd99bb2eeb0e9a6a5c526926e72cd93c03b5507dd3108b92cc3d0a6493bb633eae5d732ff0d0000ffff0300504b03041400060008000000210035741654dd0000000a0100000f0000006472732f646f776e7265762e786d6c4c8fc14ec3301044ef48fc83b548dca8d3204a92c6a900152e9c5a10e76decda56633b
b2dd34fc3dcb094ebba319cdbe6d37b31bd8a462b2c10b582e0a60caf7415aaf057c7ebcde55c052462f71085e09f8560936ddf5558b8d0c17bf53d33e6b46253e3528c0e43c369ca7de2887691146e5c93b86e830938c9acb88172a77032f8b62c51d5a4f170c8eeac5a8feb43f3b01db675debbec268b695b4769abf8eef
fa4d88db9bf9690d2cab39ff85e1179fd0a123a643387b99d8407ab97aa0a880c7922605caaaa0e520e0beae4be05dcbffbfd0fd000000ffff0300504b01022d0014000600080000002100b6833892fe000000e10100001300000000000000000000000000000000005b436f6e74656e745f54797065735d2e786d6c504b01
022d001400060008000000210038fd21ffd6000000940100000b000000000000000000000000002f0100005f72656c732f2e72656c73504b01022d0014000600080000002100f007fd884c020000a20400000e000000000000000000000000002e0200006472732f65326f446f632e786d6c504b01022d0014000600080000
00210035741654dd0000000a0100000f00000000000000000000000000a60400006472732f646f776e7265762e786d6c504b05060000000004000400f3000000b00500000000}}}{\sp{\sn dhgt}{\sv 251660288}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fAllowOverlap}{\sv 1}}
{\sp{\sn fBehindDocument}{\sv 0}}{\sp{\sn fHidden}{\sv 0}}{\sp{\sn sizerelh}{\sv 0}}{\sp{\sn sizerelv}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt \ltrpar \pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
Wird der Compiler generieren \'85
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8193\dptxbx\dptxlrtb{\dptxbxtext\ltrpar \pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 
\ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 Wird der Compiler generieren \'85
\par }}\dpx1165\dpy725\dpxsize1640\dpysize3267\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr129\dpfillbgcg12\dpfillbgcb0\dpfillpat1\dplinew10\dplinecor0\dplinecog0\dplinecob0}}}
{\shp{\*\shpinst\shpleft951\shptop173\shpright9766\shpbottom4179\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr2\shpwrk0\shpfblwtxt0\shpz0\shplid1026{\sp{\sn shapeType}{\sv 202}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockPosition}{\sv 0}}{\sp{\sn fLockAgainstSelect}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fLockAdjustHandles}{\sv 0}}
{\sp{\sn fLockAgainstGrouping}{\sv 0}}{\sp{\sn lTxid}{\sv 131072}}{\sp{\sn fRotateText}{\sv 0}}{\sp{\sn fFitShapeToText}{\sv 0}}{\sp{\sn fFilled}{\sv 1}}{\sp{\sn fArrowheadsOK}{\sv 0}}{\sp{\sn fLine}{\sv 1}}{\sp{\sn fLockShapeType}{\sv 0}}
{\sp{\sn wzName}{\sv Textfeld 2}}{\sp{\sn dyWrapDistTop}{\sv 45720}}{\sp{\sn dyWrapDistBottom}{\sv 45720}}{\sp{\sn metroBlob}{\sv {\*\svb 
504b030414000600080000002100b6833892fe000000e1010000130000005b436f6e74656e745f54797065735d2e786d6c9491414ec3301045f748dcc1f216254ebb400825e982b44b40a81c60644f128b646c794c686f8f93b61b449158da33ffbf27bbdc1cc6414c18d83aaae42a2fa440d2ce58ea2af9bedf650f527004
323038c24a1e91e5a6bebd29f7478f2c529ab8927d8cfe5129d63d8ec0b9f34869d2ba30424cc7d0290ffa033a54eba2b857da51448a599c3b645d36d8c2e710c5f690ae4f26010796e2e9b438b32a09de0f56434ca66a22f383929d09794a2e3bdc5bcf774943aa5f09f3e43ae09c7b494f13ac41f10a213ec398349409ac
70ed1aa7f3bf3b66c99133d7b65663de04de2ea98bd3b56ee3be28e0f4dff226c5de70bab4abe583ea6f000000ffff0300504b03041400060008000000210038fd21ffd6000000940100000b0000005f72656c732f2e72656c73a490c16ac3300c86ef83bd83d17d719ac318a34e2fa3d06be91ec0d88a631a5b4632d9faf6
3383c1327adb51bfd0f7897f7ff84c8b5a91255236b0eb7a50981df9988381f7cbf1e90594549bbd5d28a3811b0a1cc6c787fd19175bdb91ccb1886a942c06e65acbabd6e2664c563a2a98db66224eb6b691832ed65d6d403df4fdb3e6df0c18374c75f206f8e40750975b69e63fec141d93d0543b4749d33445778faa3d7d
e433ae8d62396035e059be43c6b56bcf81beefddfdd31bd89639ba23db846fe4b67e1ca8653f7abde972fc020000ffff0300504b030414000600080000002100d641e141270200004e0400000e0000006472732f65326f446f632e786d6cac54db6edb300c7d1fb07f10f4be38f1e23531e2145dba0c03ba0bd0ee0364498e
8549a22729b1b3af2f25a769d00d7b18e6074114a9a3c343d2abebc1687290ce2bb0159d4da69448cb4128bbabe8f787ed9b05253e302b98062b2b7a949e5eaf5fbf5af55d297368410be90882585ff65d45db10ba32cb3c6fa5617e029db4e86cc01916d074bb4c38d623bad1593e9dbecb7a70a273c0a5f7787a3b3ae93a
e1378de4e16bd3781988ae28720b697569ade39aad57acdc39d6b58a9f68b07f606198b2f8e819ea960546f64efd06651477e0a109130e2683a6515ca61c309bd9f44536f72deb64ca05c5f1dd5926ffff60f997c3374794a8683ebba2c43283457a904368a416248ffaf49d2f31ecbec3c030bc8701eb9c72f5dd1df01f9e
58d8b4cceee48d73d0b79209e4378b37b38bab238e8f2075ff19043ec3f60112d0d03813c5433908a2639d8ee7da2015c2f1b0289657455e50c2d19717f3b78b59aa5ec6caa7eb9df3e1a30443e2a6a20e8b9fe0d9e1ce874887954f21f1350f5a89add23a196e576fb42307868db24d5fcae04598b6a4afe83212f93bc434
7d7f82302a60c76b652aba3807b132eaf6c18ad48f81293dee91b2b62721a376a38a61a88754b3a47214b9067144651d8c0d8e03899b16dc2f4a7a6cee8afa9f7be62425fa93c5ea2c67f3799c8664cc8bab1c0d77e9a92f3dcc7284aa68a064dc6e429aa0a880851bac62a392becf4c4e94b16993eca7018b537169a7a8e7
dfc0fa110000ffff0300504b030414000600080000002100dc696c55df000000090100000f0000006472732f646f776e7265762e786d6c4c8fc14ec3301044ef48fc83b5485c1075424bd28438154202c10d0a82ab1b6f9388781d6c370d7fcf7282e3ec8c66de569bd90e62421f7a470ad2450202a971a6a756c1dbebfde5
1a44889a8c1e1ca1826f0cb0a94f4f2a5d1a77a4179cb6b1155c42a1d40aba18c752cad074687558b81189bdbdf3564796be95c6eb2397db415e254926adee89173a3de25d87cde7f66015ac578fd347785a3ebf37d97e28e2453e3d7c79a5cecfe6db1b1011e7f817865f7c46879a9976ee4026884141719d7292eff91204
fb459e6520760a56695e80ac2bf9ff83fa070000ffff0300504b01022d0014000600080000002100b6833892fe000000e10100001300000000000000000000000000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d001400060008000000210038fd21ffd6000000940100000b000000000000000000
000000002f0100005f72656c732f2e72656c73504b01022d0014000600080000002100d641e141270200004e0400000e000000000000000000000000002e0200006472732f65326f446f632e786d6c504b01022d0014000600080000002100dc696c55df000000090100000f00000000000000000000000000810400006472
732f646f776e7265762e786d6c504b05060000000004000400f30000008d0500000000}}}{\sp{\sn dhgt}{\sv 251659264}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fAllowOverlap}{\sv 1}}{\sp{\sn fBehindDocument}{\sv 0}}{\sp{\sn fHidden}{\sv 0}}{\sp{\sn sizerelh}{\sv 0}}
{\sp{\sn sizerelv}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt \ltrpar \pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 \tab \tab                         Wenn der Programmierer deklariert\'85
\par \ltrrow}\trowd \irow0\irowband0\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 \cell Nichts\cell dtor\cell cctor\cell cpy-op=\cell mctor\cell mv-op=\cell }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\trowd \irow0\irowband0\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 dtor\cell Ja\cell \cell Ja\cell Ja\cell Ja\cell Ja\cell }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\trowd \irow1\irowband1\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\trowd \irow2\irowband2\ltrrow\ts16\trgaph108\trrh561\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 
\trbrdrv\brdrs\brdrw10 \trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 
\af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 cctor\cell Ja\cell Ja\cell \cell Ja\cell Nein\cell Nein\cell }\pard\plain \ltrpar
\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid4325696 \trowd \irow2\irowband2\ltrrow\ts16\trgaph108\trrh561\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\trowd \irow3\irowband3\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 
\trbrdrv\brdrs\brdrw10 \trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 
\af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 cpy-op=\cell Ja\cell Ja\cell Ja\cell \cell Nein\cell Nein\cell }\pard\plain \ltrpar
\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid4325696 \trowd \irow3\irowband3\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 mctor\cell Ja\cell Nein\cell Nein\cell Nein\cell \cell Nein\cell }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\trowd \irow4\irowband4\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 mv-op=\cell Ja\cell Nein\cell Nein\cell Nein\cell Nein\cell \cell }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\trowd \irow5\irowband5\lastrow \ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\par 
\par 
\par 
\par 
\par 
\par 
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8192\dptxbx\dptxlrtb{\dptxbxtext\ltrpar \pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 
\ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 \tab \tab                         Wenn der Programmierer deklariert\'85
\par \ltrrow}\trowd \irow0\irowband0\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 \cell Nichts\cell dtor\cell cctor\cell cpy-op=\cell mctor\cell mv-op=\cell }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\trowd \irow0\irowband0\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 dtor\cell Ja\cell \cell Ja\cell Ja\cell Ja\cell Ja\cell }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\trowd \irow1\irowband1\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\trowd \irow2\irowband2\ltrrow\ts16\trgaph108\trrh561\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 
\trbrdrv\brdrs\brdrw10 \trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 
\af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 cctor\cell Ja\cell Ja\cell \cell Ja\cell Nein\cell Nein\cell }\pard\plain \ltrpar
\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid4325696 \trowd \irow2\irowband2\ltrrow\ts16\trgaph108\trrh561\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\trowd \irow3\irowband3\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 
\trbrdrv\brdrs\brdrw10 \trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 
\af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 cpy-op=\cell Ja\cell Ja\cell Ja\cell \cell Nein\cell Nein\cell }\pard\plain \ltrpar
\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 
\insrsid4325696 \trowd \irow3\irowband3\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 mctor\cell Ja\cell Nein\cell Nein\cell Nein\cell \cell Nein\cell }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\trowd \irow4\irowband4\ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row \ltrrow}\pard\plain \ltrpar\ql \li0\ri0\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\yts16 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 mv-op=\cell Ja\cell Nein\cell Nein\cell Nein\cell Nein\cell \cell }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\intbl\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\trowd \irow5\irowband5\lastrow \ltrrow\ts16\trgaph108\trrh537\trleft1643\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth3\trwWidth6925\trftsWidthB3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblrsid8485794\tbllkhdrrows\tbllkhdrcols\tbllknocolband\tblind1751\tblindtype3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx2632\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx3621
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx4610\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx5599\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx6588\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth989\clshdrawnil \cellx7577\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth991\clshdrawnil \cellx8568\row }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid4325696 
\par 
\par 
\par 
\par 
\par 
\par 
\par }}\dpx951\dpy173\dpxsize8815\dpysize4006\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid8485794 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid8485794\charrsid8485794 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid8485794 
Wird ein Kopierkonstruktor oder ein Kopierzuweisungsoperator deklariert, so werden Move-Konstruktor und Move-Zuweisungsoperator nicht generiert, dennoch kann man Objekte des Typs von Rvalues erzeugen, diese werden dann de
n Kopierkonstruktor nutzen. Genauso wird bei Zuweisung mit einer Rvalue dann der Kopierzuweisungsoperator verwendet.
\par Wenn man eine Klasse schreibt, welche keine unverwalteten Ressourcen hat, so braucht man keine der f\'fcnf speziellen Mitgliedsfunktionen selbst schreiben. Der Compiler wird die korrekten Kopier- und Move-Semantiken generieren. }{\rtlch\fcs1 \af40 
\ltrch\fcs0 \insrsid8064108 Ansonsten muss man die speziellen Mitgliedsfunktionen selbst schreiben. Wenn eine Klasse durch Move-Semantik, keine Vorteile erf\'e4hrt, so braucht man den Move-Konstruktor und Move-Zuweisungsoperator auch nicht zu definieren.}
{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid8485794 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid8064108 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid8064108\charrsid860821 Forwarding references
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid6434611 Folgendes Funktionstemplate sei gegeben:}{\rtlch\fcs1 \af40 
\ltrch\fcs0 \insrsid8064108 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid6434611 template <typename T>
\par void foo(T&&);
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid9640187 T&& ist in diesem Fall nicht eine Rvalue Referenz, sondern eine forwarding reference.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid6434611 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid9640187 Es kann auch an lvalues gebunden werden.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9640187 foo(erstelle_dreieck()); // T ist unique_ptr<Form>}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9923761 &&}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid9640187 ,
\par                          // T&& ist unique_ptr<Form>&&
\par unique_ptr<Form> a(new Dreieck);
\par foo(a); // T ist unique_ptr<Form>&,
\par         // T&& ist unique_ptr<Form>&
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid9923761 Wird also eine Lvalue als Argument \'fcbergeben, so wird die forwarding reference zu einer entsprechenden Lvalue Referenz. Wird eine Rvalue \'fc
bergeben, so wird die forwarding reference zu der entsprecheneden Rvalue Referenz.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid9640187 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13700690 Der Typ T wird abgeleitet und so entstehen invalide Typen aus Referenzen zu Referenzen.
\par wie z.B. T & &, T& &&, T&& &, oder T&& &&. Diese werden anhand der reference collapsing rules zu validen Referenztypen umgewandelt:
\par T& & wird zu T&
\par T& && wird zu T&
\par T&& & wird zu T&
\par T&& && wird zu T&&
\par 
\par M\'f6chte man ein Funktionstemplate, welches nur rvalues akzeptiert, kann man das zum Beispiel wie folgt deklarieren:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13700690\charrsid13700690 #include <}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13700690 type_traits>}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13700690\charrsid13700690 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13700690 template <typename T>
\par typename std::enable_if<std::is_rvalue_reference<T&&>::value, void>::type
\par foo(T&&);
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid13700690\charrsid860821 Implementation von std::move
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13700690\charrsid13700690 template<typename T>
\par typename std::remove_reference<T>::type&&
\par move(T&& t)
\par \{
\par     return static_cast<typename std::remove_reference<T>::type&&>(t);
\par \}}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13700690 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13700690 move akzupetiert jede Art von Parameter dank der forwarding reference T&&.
\par move gibt eine Rvalue Referenz zur\'fcck.
\par Der Einsatz der Metafunktion std::remove_reference ist n\'f6tig, denn f\'fcr Lvalues vom Typ X w\'e4re der R\'fcckgabetyp X& &&, welche zu X& zusammenfallen w\'fcrde}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13652492 
. Da t, wie jede Referenz, eine Lvalue ist, aber wir eine Rvalue Referenz an t binden wollen, muss t explizit zum korrekten R\'fcckgabetyp gecasted werden. }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13700690 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13652492 Der Aufruf einer Funktion, welche eine Rvalue Referenz zur\'fcckgimt, wie zum Beispiel std::move, ist eine xvalue.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid14823640 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \b\insrsid14823640\charrsid860821 Perfect forwarding
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid14823640 Ein Problem welches forwarding references l\'f6sen ist das perfect forwarding-Problem.
\par Gegeben sei folgende simple Fabrikfunktion:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid14823640 template <typename T, typename Arg>
\par std::shared_ptr<T> factory(Arg arg)
\par \{
\par     return std::shared_ptr<T>(new T(arg));
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid14823640 Die Absicht ist es das Argument in arg an den Konstruktor von T weiterzuleiten.
\par Idealerweise, sollte es sich so verhalten, als w\'e4re die Fabrikfunktion gar nicht da und es w\'e4re so, als w\'fcrde der Konstruktor direkt aufgerufen.
\par Der Code im obigen Beispiel versagt dabei, da er eine unn\'f6tige Kopie im Parameter vornimmt. Des Weiteren wird das Argument nicht nur unn\'f6tig kopiert, sondern wird es immer als Lvalue weitergeleitet, auch wenn die value category eine andere war.

\par Nimmt man nun eine Referenz statt eine Kopie zu machen, so ist das nicht viel besser.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid14823640 template <typename T, typename Arg>
\par std::shared_ptr<T> factory(Arg& arg)
\par \{
\par     return std::shared_ptr<T>(new T(arg));
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid14823640 Nun kann man die Funktion nicht mehr mit rvalues aufrufen.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7149172 factory<X>(foo()); // Fehler, wenn foo by value zur\'fcckgibt}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid14823640 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7149172 factory<X>(41);    // Fehler
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid7149172 Man kann nun ein const Lvalue Referenz-Parameter stattdessen nehmen.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7149172 template <typename T, typename Arg>
\par std::shared_ptr<T> factory(const Arg& arg) 
\par \{
\par     return std::shared_ptr<T>(new T(arg));
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid7149172 Problematisch ist, dass die Fabrikfunktion nicht von Move-Semantik profitieren ka
nn, da sie ihr Argument immer als Lvalue weitterreicht. Von dem Argument zu Moven ist nicht legal, da es const-qualifiziert ist und m\'f6glicherweise eine Lvalue ist.
\par Man m\'f6chte also das Argument als Lvalue weiterleiten, wenn es eine Lvalue ist und es als Rvalue weiterleites, wenn es eine Rvalue ist.
\par Um dies zu erreichen werden im folgenden Beispiel forwarding references genutzt. Diese fallen aufgrund der reference collapsing rules zum korrekten Referenzparametertyp zusammen.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7149172 template <typename T, typename Arg>
\par std::shared_ptr<T> factory(Arg&& arg)
\par \{
\par     return std::shared_ptr<T>(new T(std::forward<Arg>(arg)));
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid7149172 std::forward kann wie folgt definiert sein:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid7149172 template <typename S>
\par S&& forward(typename std::remove_reference<S>::type& a) noexcept
\par \{
\par     return static_cast<S&&>(a);
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16739915 Es sei angenommen, dass factory<A> mit einer Lvalue vom Typ X aufgerufen wird.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3544172 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16739915 X x;
\par factory<A>(x);
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16739915 Aufgrund der reference collapsing rules wird das Template-Typ-Argument Arg in factory zu X&.
\par Der Compiler wird folgende Instanziierungen von factory und std::forward erstellen:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16739915 std::shared_ptr<A> factory(X& && arg)
\par \{
\par     return std::shared_ptr<A>(new A(std::forward<X&>(arg)));
\par \}
\par X& && forward(std::remove_reference<X&>::type& a) noexcept
\par \{
\par     return static_cast<X& &&>(a);
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16739915 Nach dem Auswerten von std::remove_reference und nach Anwenden der reference collapsing rules wird dies zu:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16739915 std::shared_ptr<A> factory(X& arg)
\par \{
\par     return std::shared_ptr<A>(new A(std::forward<X&>(arg)));
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid2781408 
\par 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16739915 X& std::forward(X& a)
\par \{
\par     return static_cast<X&>(a);
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16739915 Wie man sieht funktioniert das perfect forwarding f\'fcr Lvalues. Die Lvalueness bleibt durch alle Funktionsaufrufe hindurch dank std::forward erhalten.
\par Als n\'e4chstes soll davon ausgegangen sein, dass factory<A> mit einer Rvalue vom Typ X aufgerufen wird:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16739915 X foo();
\par factory<A>(foo());
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16739915 Dies wird zu folgenden Funktionstemplateinstanziierungen f\'fchren:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13062248 std::shared_ptr<A> factory(X&& && arg)
\par \{
\par     return std::shared_ptr<A>(new A(std::forward<X&&>(arg)));
\par \}
\par X&& && }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3682998 std::}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid13062248 forward(typename std::remove_reference<X&&>::type& a) noexcept
\par \{
\par     return static_cast<X&& &&>(a);
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3682998 Nach dem Auswerten von std::remove_reference und nach Anwenden der reference collapsing rules wird dies zu:
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3682998 std::shared_ptr<A> factory(X&& arg)}{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid16739915 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid3682998 \{
\par     return std::shared_ptr<A>(new A(std::forward<X&&>(arg)));
\par \}
\par X&& std::forward(X& a) noexcept
\par \{
\par     return static_cast<X&&>(a);
\par \}
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3682998 Somit wird die Rvalue letztendlich durch std::forward zu einer Rvalue zur\'fcckgecasted um die Rvalueness beim Weiterleiten beizubehalten.
\par So l\'f6st std::forward das perfect forwarding-Problem, Lvalues werden immer als Lvalues weitergeleitet und Rvalues immer als Rvalues, so werden die value categories beibehalten.
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid6031737\charrsid860821 Move-Sicherheit
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid6031737 
Wenn man von einer Lvalue moved, zum Beispiel mit Hilfe von std::move, so verbleibt ein move-from-Objekt. Diese Objekte werden auch Zombie-Objekte genannt und der inkorrekte Umgang mit diesen kann undefiniertes Verhalten ausl\'f6sen.}{\rtlch\fcs1 \af40 
\ltrch\fcs0 \insrsid12876092  Der Implementierer eines Typs kann, sofern dieser Move-Semantik nutzt, den Move-Konstruktor und Move-Zuweisungsoperator so definieren, dass bestimmte Garantien f\'fcr Objekte des Typs im moved-from-Zustand geboten werden k
\'f6nnen.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid6031737 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13309829 Dabei kann man folgende Arten von Move-Sicherheit unterscheiden (es sind auch weitere denkbar):}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12876092 
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af40\afs22 \ltrch\fcs0 \f31506\fs22\insrsid13309829 \hich\af31506\dbch\af31506\loch\f31506 1.\tab}}\pard\plain \ltrpar\s15\ql \fi-360\li720\ri0\sa160\sl259\slmult1\widctlpar
\tx5159\wrapdefault\aspalpha\aspnum\faauto\ls5\adjustright\rin0\lin720\itap0\pararsid4937686\contextualspace \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af40 \ltrch\fcs0 
\insrsid13309829 Kein-Move-Garantie (nur Kopieren erlaubt)
\par }\pard \ltrpar\s15\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13309829 Ein Typ bietet Kein-Move-Garantie, w
enn der Move-Konstruktor oder Move-Zuweisungsoperator keine Move-Operationen vornehmen. Ein Move dieser Typen ist \'e4quivalent mit einem Kopieren.
\par Wenn ein Typ diese Garantie bietet, hat er keine nutzerdefinierten Move-Operationen und hat nur Datenmitglieder, die die gleiche Garantie bieten. Solche Typen besitzen typischerweise keine Ressourcen, welche freigegeben werden m\'fcssen, darum ben\'f6
tigen sie keine speziellen Kopier-Operationen oder Destruktoren.
\par Jeder triviale Typ hat diese Garantie, sowie jeder Typ f\'fcr welchen keine Move-Operationen implizit generiert werden.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3694408 
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af40\afs22 \ltrch\fcs0 \f31506\fs22\insrsid13309829 \hich\af31506\dbch\af31506\loch\f31506 2.\tab}}\pard \ltrpar\s15\ql \fi-360\li720\ri0\sa160\sl259\slmult1\widctlpar
\tx5159\wrapdefault\aspalpha\aspnum\faauto\ls5\adjustright\rin0\lin720\itap0\pararsid4937686\contextualspace {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13309829 Starke Move-Sicherheit (Wohldefinierter und valider Moved-From-Zustand)
\par }\pard \ltrpar\s15\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13309829 
Der Moved-From-Zustand eines Typs, welcher diese Move-Sicherheit bietet ist wohldefiniert. Alle Mitgliedsfunktionen, dessen Vorbedingungen in dem definierten Zustand erf\'fcllt sind, k\'f6nnen sicher aufgerufen werden. Zus\'e4
tzlich werden diese Mitgliedsfunktionen deterministische Auswirkungen oder Resultate haben.
\par Ein Beispiel f\'fcr einen Typ, der die starke Move-Sicherheit bietet ist std::unique_ptr.
\par Move-Konstruktion ist definiert als Transfer des Besitzes \'fcber das verwaltete Objekt.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid15486304 Ein std::unique_ptr im Moved-From-Zustand besitzt immer nichts. operator bool() wird false zur\'fcckgeben und get() wird nullptr zur\'fcckgeben. Aufrufe von op
erator*() oder operator->() werden in undefiniertem Verhalten resultieren.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid15795703  Allerdings ist zu beachten, dass bei std::unique_ptrs mit einem custom deleter, der custom deleter nat\'fc
rlich auch moved wird, dieser kann nat\'fcrlich eine andere Move-Sicherheit bieten.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3694408 
\par 
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af40\afs22 \ltrch\fcs0 \f31506\fs22\insrsid3694408 \hich\af31506\dbch\af31506\loch\f31506 3.\tab}}\pard \ltrpar\s15\ql \fi-360\li720\ri0\sa160\sl259\slmult1\widctlpar
\tx5159\wrapdefault\aspalpha\aspnum\faauto\ls5\adjustright\rin0\lin720\itap0\pararsid5784356\contextualspace {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3694408 Einfache Move-Sicherheit (Valider aber unspezifizierter Moved-From-Zustand)
\par }\pard \ltrpar\s15\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3694408 Die Einfache Move-Sicherheit ben\'f6
tigt keinen wohldefinierten Moved-From-Zustand.
\par Sie ben\'f6tigt lediglich, dass der Moved-From-Zustand valide ist, aber der genaue Zustand ist nicht spezifiziert.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10573591  Man kann sicher alle Mitgliedsfunktionen aufrufen, die einen weiten Vertrag haben, das hei
\'dft, sie haben keine Vorbedingungen. Aber es wird nicht garantiert welche Resultate diese Funktionsaufrufe haben werden, sie sind nicht deterministisch wie bei der starken Move-Sicherheit. Ein Beispiel f\'fc
r einen Typ mit einfacher Move-Sicherheit ist std::string.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3694408 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \f40\insrsid10573591 
\par std::string a(\'93Hello World\'93);
\par std::string b(std::move(a));
\par std::cout << a.c_str() << \lquote \\n\lquote ;
\par 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10573591 Der Aufruf der Mitgliedsfunktion c_str auf dem Moved-From-Objekt a wird kein undefiniertes Verhalten ausl\'f6
sen, aber ist das Resultat nicht spezifiziert. Es wird vom Standard nicht garantiert welche Ausgabe erzeugt werden w\'fcrde.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12270613  std::string::c_str() hat keine Vorbedingung, somit wird garantiert, dass der A
ufruf kein undefiniertes Verhalten ausl\'f6st. Die Ausgabe ist von der Implementation abh\'e4ngig.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid10573591 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16718877 
\par {\listtext\pard\plain\ltrpar \s15 \rtlch\fcs1 \af40\afs22 \ltrch\fcs0 \f31506\fs22\insrsid16718877 \hich\af31506\dbch\af31506\loch\f31506 4.\tab}}\pard \ltrpar\s15\ql \fi-360\li720\ri0\sa160\sl259\slmult1\widctlpar
\tx5159\wrapdefault\aspalpha\aspnum\faauto\ls5\adjustright\rin0\lin720\itap0\pararsid8546750\contextualspace {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16718877 Keine Move-Sicherheit
\par }\pard \ltrpar\s15\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16718877 
Die geringste Garantie bietet keine Move-Sicherheit. Das Moved-From-Objekt ist nach dem Move nicht mehr valide. Man darf lediglich den Destruktor aufrufen, oder dem Ob}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13050013 jekt einen neuen Wert zuweisen (}{
\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16718877 sofern es einen Zuweisungsoperator gibt}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13050013 )}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16718877 .}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid4325696  Objekte m\'fc
ssen also immer zerst\'f6rbar sein, auch im Moved-From-Zustand.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid16718877\charrsid10573591 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid15795703  }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid13309829 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid4325696 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \b\insrsid4325696\charrsid860821 Interaktion mit Standardbibliothekscontainern
\par }\pard\plain \ltrpar\s15\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5204498\contextualspace \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid4325696 Eigene Move-Konstruktoren und Move-Zuweisungsoperatoren sollten, wenn m\'f6
glich als noexcept deklariert werden. noexcept garantiert, das eine Funktion nicht wirft. Sollte die Funktion doch werfen, so wird std::terminate() aufgerufen, was zum Abbruch des Programms f\'fchrt. Ist es m\'f6glich den Mov
e-Konstruktor und den Move-Zuweisungsoperator so zu definieren, dass sie nie werfen, so }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid4024298 sollte dies getan werden. Dann sollte zus\'e4
tzlich auch der Move-Konstruktor und der Move-Zuweisungsoperator als noexcept deklariert werden.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid4325696 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3306353 Die Standardbibliothekscontainer bieten die \'84Strong Exception Guarantee\'93, diese besagt, wenn eine Exception auftritt, so sind die Objekte immer noch im gleichen Zustand, als w\'e4
re die Mitgliedsfunktion des Standardbibliothekscontainers nicht aufgerufen worden.
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12520924 Ein Move modifiziert allerdings das Quellobjekt. Das Quellobjekt wird im Moved-From-Zustand hinterlassen. Sollte dieser Move also werfen, kann die \'84Strong Exception Gurantee\'93
 nicht mehr geboten werden.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid6627848  Darum \'fcberpr\'fcfen die Mitgliedsfunktionen von Standardbibliothekscontainern, ob ein Move von dem Quellobjekt werfen k\'f6nnte (nicht als noexcept 
deklarierter Move-Konstruktor oder Move-Zuweisungsoperator). Ist der Move-Konstruktor und Move-Zuweisungsoperator also nicht noexcep
t, so werden Standardbibliothekscontainer nicht von der nutzerimplementierten Move-Semantik Gebrauch machen, sondern stattdessen kopieren.}{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid12520924 
\par }{\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3695048 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3695048 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \ul\insrsid3695048\charrsid3695048 Quellenangaben
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3695048 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3695048\charrsid3695048 
http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4606.pdf
\par http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2002/n1377.htm
\par https://meetingcpp.com/index.php/br/items/cpp-and-zombies-a-moving-question.html
\par https://foonathan.github.io/blog/2016/07/23/move-safety.html
\par https://akrzemi1.wordpress.com/2011/08/11/move-constructor/
\par https://akrzemi1.wordpress.com/2011/06/10/using-noexcept/
\par http://en.cppreference.com/w/cpp/utility/move
\par http://en.cppreference.com/w/cpp/utility/forward
\par http://en.cppreference.com/w/cpp/language/rule_of_three
\par http://en.cppreference.com/w/cpp/language/value_category
\par http://en.cppreference.com/w/cpp/language/reference
\par http://en.cppreference.com/w/cpp/language/move_constructor
\par http://en.cppreference.com/w/cpp/language/move_assignment
\par http://stackoverflow.com/questions/3106110/what-are-move-semantics/11540204#11540204
\par http://thbecker.net/articles/rvalue_references/section_07.html
\par http://thbecker.net/articles/rvalue_references/section_08.html
\par }\pard\plain \ltrpar\s15\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\tx5159\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3695048\contextualspace \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\f31506\fs22\lang1031\langfe1033\cgrid\langnp1031\langfenp1033 {\rtlch\fcs1 \af40 \ltrch\fcs0 \insrsid3695048\charrsid3695048 http://www.codingstandard.com/rule/12-5-4-declare-noexcept-the-move-constructor-and-move-assignment-operator/}{\rtlch\fcs1 \af40 
\ltrch\fcs0 \insrsid3695048 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b030414000600080000002100ec7f4c3895070000c9200000160000007468656d652f7468656d652f
7468656d65312e786d6cec59cd8b1bc915bf07f23f347d97f5d5ad8fc1f2a24fcfda33b6b164873dd648a5eef2547789aad28cc56208de532e81c026e49085bd
ed21842cecc22eb9e48f31d8249b3f22afaa5bdd5552c99e191c3061463074977eefd5afde7bf5de53d5ddcf5e26d4bbc05c1096f6fcfa9d9aefe174ce16248d
7afeb3d9a4d2f13d2151ba4094a5b8e76fb0f03fbbf7eb5fdd454732c609f6403e1547a8e7c752ae8eaa5531876124eeb0154ee1bb25e30992f0caa3ea82a34b
d09bd06aa3566b55134452df4b51026a1f2f97648ebd9952e9dfdb2a1f53784da5500373caa74a35b6243476715e5708b11143cabd0b447b3eccb3609733fc52
fa1e4542c2173dbfa6fffceabdbb5574940b517940d6909be8bf5c2e17589c37f49c3c3a2b260d823068f50bfd1a40e53e6edc1eb7c6ad429f06a0f91c569a71
31758683ee6014e65803943d3a748fdaa366ddc21bfa9b7b9cfba1fa58780dcaf4077bf8c9640856b4f01a94e1c33d7c10b41bc3c0c26b50866fede1dbb5fe28
685b780d8a2949cff7d0b5b0d51c6e575b40968c1e3be1dd3098b41bb9f21205d15044979a62c9527928d612f482f1090014902249524f6e567889e610c54344
c91927de09896208bc154a9980e15aa336a935e1bffa04fa495b041d6164482b5ec044ec0d293e9e9873b2923dff0168f50dc8db9f7f7ef3fac737af7f7af3d5
576f5eff3d9f5babb2e48e511a9972bf7cf787ff7cf35befdf3f7cfbcbd77fcca6dec50b13ffee6fbf7bf78f7fbe4f3dacb834c5db3f7dffeec7efdffef9f7ff
faebd70eed7d8ece4cf88c2458788ff0a5f79425b040077f7cc6af27318b113125fa6924508ad42c0efd63195be8471b44910337c0b61d9f7348352ee0fdf50b
8bf034e66b491c1a1fc689053c658c0e18775ae1a19acb30f36c9d46eec9f9dac43d45e8c235f710a59697c7eb15e458e252398cb145f30945a944114eb1f4d4
77ec1c63c7eabe20c4b2eb29997326d8527a5f106f8088d324337266455329744c12f0cbc64510fc6dd9e6f4b93760d4b5ea11beb091b0371075909f616a99f1
3e5a4b94b854ce50424d839f2019bb484e377c6ee2c64282a7234c99375e60215c328f39acd770fa4348336eb79fd24d6223b924e72e9d278831133962e7c318
252b17764ad2d8c47e2ece214491f7844917fc94d93b44bd831f507ad0ddcf09b6dcfde16cf00c32ac49a90c10f5cd9a3b7c791f332b7ea71bba44d8956afa3c
b1526c9f1367740cd69115da271853748916187bcf3e773018b09565f392f48318b2ca317605d60364c7aa7a4fb1805e493537fb79f284082b64a7386207f89c
6e7612cf06a509e287343f02af9b361f43a94b5c01f098cecf4de023023d20c48bd3288f05e83082fba0d62731b20a987a17ee78dd70cb7f57d963b02f5f5834
aeb02f41065f5b0612bb29f35edbcc10b52628036686a0cb70a55b10b1dc5f8aa8e2aac5d64eb9a5bd694b37407764353d09493fd801edf43ee1ffaef7810ee3
ed5fbe71ec838fd3efb8155bc9ea9a9dcea16472bcd3df1cc2ed763543c617e4d36f6a46689d3ec15047f633d66d4f73dbd3f8fff73dcda1fd7cdbc91cea376e
3b191f3a8cdb4e263f5cf9389d4cd9bc405fa30e3cb2831e7dec931c3cf559124aa77243f189d0073f027ecf2c2630a8e4f489272e4e0157313caa32071358b8
88232de371267f43643c8dd10a4e87eabe5212895c7524bc15137068a4879dba159eae9353b6c80e3beb7575b09955568164395e0b8b7138a89219bad52e0ff0
0af59a6da40f5ab70494ec75481893d9249a0e12ededa032923ed605a33948e8957d14165d078b8e52bf75d51e0ba05678057e707bf033bde787018880109cc7
4173be507eca5cbdf5ae76e6c7f4f421635a11000df636024a4f7715d783cb53abcb42ed0a9eb64818e16693d096d10d9e88e167701e9d6af42a34aeebeb6ee9
528b9e32859e0f42aba4d1eebc8fc54d7d0d72bbb981a666a6a0a977d9f35bcd1042668e563d7f0987c6f098ac207684facd856804372f73c9b30d7f93ccb2e2
428e90883383eba49365838448cc3d4a929eaf965fb881a63a87686ef50624844f965c17d2caa7460e9c6e3b192f97782e4db71b23cad2d92b64f82c5738bfd5
e237072b49b606774fe3c5a57746d7fc2982100bdb7565c00511707750cfacb92070195624b232fe760a539e76cddb281d43d938a2ab18e515c54ce6195ca7f2
828e7e2b6c60bce56b06831a26c90be159a40aac6954ab9a165523e370b0ea7e584859ce489a65cdb4b28aaa9aee2c66cdb02d033bb6bc599137586d4d0c39cd
acf059eade4db9dd6daedbe9138a2a01062fece7a8ba57280806b572328b9a62bc9f8655cece47eddab15de007a85da5481859bfb555bb63b7a24638a783c11b
557e90db8d5a185a6efb4a6d697d6b6e5e6cb3b317903c46d0e5aea914da9570b2cb11344453dd93646903b6c84b996f0d78f2d69cf4fc2f6b613f1836c261a5
d609c795a019d42a9db0dfacf4c3b0591f87f5da68d078058545c6493dcc6eec2770814137f9bdbd1edfbbbb4fb6773477e62ca9327d375fd5c4f5dd7dbd71f8
eede239074be6c3526dd6677d0aa749bfd4925180d3a95eeb035a88c5ac3f668321a869deee495ef5d6870d06f0e83d6b85369d587c34ad0aa29fa9d6ea51d34
1afda0ddef8c83feabbc8d819567e923b7059857f3baf75f000000ffff0300504b0304140006000800000021000dd1909fb60000001b01000027000000746865
6d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e435
0d363f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452
282e3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173
d9850528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0fbfff0000001c02000013000000000000000000
00000000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b0000000000000000
0000000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c000000000000000000000000001902
00007468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d0014000600080000002100ec7f4c3895070000c9200000160000000000
0000000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b0100002700
0000000000000000000000009f0a00007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d0100009a0b00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax373\lsdlockeddef0\lsdsemihiddendef0\lsdunhideuseddef0\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 5;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 9;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 1;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 2;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 3;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 4;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 5;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 6;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 7;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 8;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 header;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footer;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index heading;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of figures;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope return;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation reference;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 line number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 page number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote text;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of authorities;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 macro;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 toa heading;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 5;\lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Closing;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Signature;\lsdsemihidden1 \lsdunhideused1 \lsdpriority1 \lsdlocked0 Default Paragraph Font;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 4;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Message Header;\lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Salutation;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Date;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Note Heading;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Block Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 FollowedHyperlink;\lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;
\lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Document Map;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Plain Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 E-mail Signature;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Top of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Bottom of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal (Web);\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Acronym;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Cite;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Code;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Definition;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Keyboard;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Preformatted;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Sample;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Typewriter;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Variable;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Table;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation subject;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 No List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 6;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 6;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Contemporary;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Elegant;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Professional;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Balloon Text;\lsdpriority39 \lsdlocked0 Table Grid;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Theme;\lsdsemihidden1 \lsdlocked0 Placeholder Text;
\lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdpriority60 \lsdlocked0 Light Shading;\lsdpriority61 \lsdlocked0 Light List;\lsdpriority62 \lsdlocked0 Light Grid;\lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdpriority64 \lsdlocked0 Medium Shading 2;
\lsdpriority65 \lsdlocked0 Medium List 1;\lsdpriority66 \lsdlocked0 Medium List 2;\lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdpriority68 \lsdlocked0 Medium Grid 2;\lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdpriority70 \lsdlocked0 Dark List;
\lsdpriority71 \lsdlocked0 Colorful Shading;\lsdpriority72 \lsdlocked0 Colorful List;\lsdpriority73 \lsdlocked0 Colorful Grid;\lsdpriority60 \lsdlocked0 Light Shading Accent 1;\lsdpriority61 \lsdlocked0 Light List Accent 1;
\lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdsemihidden1 \lsdlocked0 Revision;
\lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;
\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;\lsdpriority72 \lsdlocked0 Colorful List Accent 1;
\lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;
\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;
\lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;
\lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdpriority60 \lsdlocked0 Light Shading Accent 4;
\lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdpriority62 \lsdlocked0 Light Grid Accent 4;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdpriority70 \lsdlocked0 Dark List Accent 4;
\lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;\lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdpriority61 \lsdlocked0 Light List Accent 5;
\lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;
\lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdpriority62 \lsdlocked0 Light Grid Accent 6;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;
\lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdsemihidden1 \lsdunhideused1 \lsdpriority37 \lsdlocked0 Bibliography;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;\lsdpriority41 \lsdlocked0 Plain Table 1;\lsdpriority42 \lsdlocked0 Plain Table 2;\lsdpriority43 \lsdlocked0 Plain Table 3;\lsdpriority44 \lsdlocked0 Plain Table 4;
\lsdpriority45 \lsdlocked0 Plain Table 5;\lsdpriority40 \lsdlocked0 Grid Table Light;\lsdpriority46 \lsdlocked0 Grid Table 1 Light;\lsdpriority47 \lsdlocked0 Grid Table 2;\lsdpriority48 \lsdlocked0 Grid Table 3;\lsdpriority49 \lsdlocked0 Grid Table 4;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 1;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 1;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 1;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 1;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 1;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 2;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 2;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 2;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 2;
\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 3;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 3;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 3;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 3;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 3;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 4;
\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 4;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 4;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 4;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 4;
\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 4;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 5;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 5;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 5;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 5;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 5;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 6;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 6;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 6;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 6;
\lsdpriority46 \lsdlocked0 List Table 1 Light;\lsdpriority47 \lsdlocked0 List Table 2;\lsdpriority48 \lsdlocked0 List Table 3;\lsdpriority49 \lsdlocked0 List Table 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful;\lsdpriority52 \lsdlocked0 List Table 7 Colorful;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 List Table 2 Accent 1;\lsdpriority48 \lsdlocked0 List Table 3 Accent 1;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 1;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 1;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 1;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 List Table 2 Accent 2;\lsdpriority48 \lsdlocked0 List Table 3 Accent 2;\lsdpriority49 \lsdlocked0 List Table 4 Accent 2;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 2;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 3;
\lsdpriority47 \lsdlocked0 List Table 2 Accent 3;\lsdpriority48 \lsdlocked0 List Table 3 Accent 3;\lsdpriority49 \lsdlocked0 List Table 4 Accent 3;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 3;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 4;\lsdpriority47 \lsdlocked0 List Table 2 Accent 4;
\lsdpriority48 \lsdlocked0 List Table 3 Accent 4;\lsdpriority49 \lsdlocked0 List Table 4 Accent 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 4;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 4;
\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 List Table 2 Accent 5;\lsdpriority48 \lsdlocked0 List Table 3 Accent 5;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 5;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 5;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 5;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 List Table 2 Accent 6;\lsdpriority48 \lsdlocked0 List Table 3 Accent 6;\lsdpriority49 \lsdlocked0 List Table 4 Accent 6;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Mention;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Hyperlink;}}{\*\datastore 0105000002000000180000004d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e50000000000000000000000003091
142f1f0dd201feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}